# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

image: hashicorp/terraform:1.1.4

pipelines:
  default:
    - parallel:
      - step:
          name: 'Init and plan'
          script:
            - git clone git@bitbucket.org:warnerb47/configuration.git
            - cp configuration/aws/aws-vm-config.yml ./AWS/config.yml
            - cd AWS
            - terraform init
            - terraform plan
      - step:
          name: 'Test'
          script:
            - echo "Test ..."
      - step:
          name: 'Test Generate Ansible config'
          image: python:3.7.13-alpine
          script:
            - cd AWS/output
            - python3 generate_host.py
            - cat hosts 

    # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Apply changes'
        deployment: production
        trigger: 'manual'
        script:
          - git clone git@bitbucket.org:warnerb47/configuration.git
          - cp configuration/aws/aws-vm-config.yml ./AWS/config.yml
          - cd AWS
          - terraform init
          - terraform plan
          - terraform apply -auto-approve
    - step:
        name: 'Generate Ansible config'
        script:
          - echo "Generate Ansible config ..."
